/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import busquedas.Arista;
import busquedas.Nodo;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;

/**
 *
 * @author Karlo
 */
public class Principal extends javax.swing.JFrame {

    HashMap<String, int[]> nodosG;
    LinkedList<String[]> aristasG;
    HashMap<String,Nodo> nodos;
    HashMap<String,Arista> aristas;
    boolean gnodo,garista,gmove,gselect,geliminar;
    Grafo grafoG;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        nodosG=new HashMap<String, int[]>();
        aristasG=new LinkedList<String[]>();
        //
        nodos=new HashMap<String, Nodo>();
        aristas=new HashMap<String,Arista>();
        grafoG=new Grafo(this);
        grafoG.setBackground(Color.white);
        grafoG.setArreglos(nodosG,aristasG);
        grafoG.setArreglos2(nodos,aristas);
        grafoG.setSize(900,700);
        grafoG.setLocation(0,0);
        grafoG.setVisible(true);
        contenedor1.add(grafoG);
        gnodo=false;
        garista=false;
        gmove=false;
        gselect=false;
        geliminar=false;
    }

    
    public void desactivarSeleccionNodo(){
        gnodo=false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        insertNodo = new javax.swing.JButton();
        insertArc = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        contenedor1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        numN = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        numA = new javax.swing.JLabel();
        jToolBar3 = new javax.swing.JToolBar();
        eliminar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jToolBar2 = new javax.swing.JToolBar();
        move = new javax.swing.JButton();
        select = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jToolBar4 = new javax.swing.JToolBar();
        ejecutar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setToolTipText("Eliminar");
        jToolBar1.setBorderPainted(false);

        insertNodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/nodo.png"))); // NOI18N
        insertNodo.setToolTipText("Nodo");
        insertNodo.setFocusPainted(false);
        insertNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertNodoActionPerformed(evt);
            }
        });
        jToolBar1.add(insertNodo);

        insertArc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/connectorc.png"))); // NOI18N
        insertArc.setToolTipText("Arista");
        insertArc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertArcActionPerformed(evt);
            }
        });
        jToolBar1.add(insertArc);
        jToolBar1.add(jSeparator2);

        jLabel1.setText("Graficar");

        contenedor1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        contenedor1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout contenedor1Layout = new javax.swing.GroupLayout(contenedor1);
        contenedor1.setLayout(contenedor1Layout);
        contenedor1Layout.setHorizontalGroup(
            contenedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 967, Short.MAX_VALUE)
        );
        contenedor1Layout.setVerticalGroup(
            contenedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
        );

        jLabel2.setText("#Nodos:");

        numN.setText("0");
        numN.setToolTipText("");

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setText("#Aristas:");

        numA.setText("0");

        jToolBar3.setFloatable(false);
        jToolBar3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar3.setToolTipText("Eliminar");
        jToolBar3.setBorderPainted(false);

        eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/remove.png"))); // NOI18N
        eliminar.setToolTipText("Eliminar");
        eliminar.setFocusable(false);
        eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        jToolBar3.add(eliminar);

        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/brush.png"))); // NOI18N
        limpiar.setToolTipText("Limpiar");
        limpiar.setFocusable(false);
        limpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        jToolBar3.add(limpiar);
        jToolBar3.add(jSeparator6);

        jToolBar2.setFloatable(false);
        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar2.setToolTipText("Eliminar");
        jToolBar2.setBorderPainted(false);

        move.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move.png"))); // NOI18N
        move.setToolTipText("Mover");
        move.setFocusable(false);
        move.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        move.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveActionPerformed(evt);
            }
        });
        jToolBar2.add(move);

        select.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/seleccionar.png"))); // NOI18N
        select.setToolTipText("Seleccionar");
        select.setFocusable(false);
        select.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        select.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });
        jToolBar2.add(select);
        jToolBar2.add(jSeparator5);

        jToolBar4.setFloatable(false);
        jToolBar4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar4.setToolTipText("Eliminar");
        jToolBar4.setBorderPainted(false);

        ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/ejecutar.png"))); // NOI18N
        ejecutar.setToolTipText("Ejecutar");
        ejecutar.setFocusable(false);
        ejecutar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ejecutar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarActionPerformed(evt);
            }
        });
        jToolBar4.add(ejecutar);
        jToolBar4.add(jSeparator1);

        jLabel5.setText("Ejecutar");

        jLabel3.setText("Seleccion");

        jLabel6.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numN, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numA, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(contenedor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(317, 317, 317))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6)
                        .addGap(1, 1, 1)
                        .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(contenedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(numA, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(numN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertNodoActionPerformed
        garista=false;
        gmove=false;
        gselect=false;
        if (gnodo){gnodo = false;}else {gnodo = true;}
        enviarEstados();
        /*g.setPaint( Color.BLACK);
         Line2D.Double dlinea = new Line2D.Double( 10,10,20,10);
         g.draw( dlinea );
         area.revalidate();*/
    }//GEN-LAST:event_insertNodoActionPerformed

    private void insertArcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertArcActionPerformed
        gnodo=false;
        gmove=false;
        gselect=false;
        if (garista){garista = false;}else {garista = true;}
        enviarEstados();
    }//GEN-LAST:event_insertArcActionPerformed

    private void moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveActionPerformed
        gnodo=false;
        garista=false;
        gselect=false;
        if(gmove){gmove=false;}else{gmove=true;}
        enviarEstados();
    }//GEN-LAST:event_moveActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        gnodo=false;
        garista=false;
        gmove=false;
        if(gselect){gselect=false;}else{gselect=true;}
        enviarEstados();
    }//GEN-LAST:event_selectActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        nodosG=new HashMap<String, int[]>();
        aristasG=new LinkedList<String[]>();
        nodos=new HashMap<String, Nodo>();
        aristas=new HashMap<String,Arista>();
        grafoG.setArreglos(nodosG,aristasG);
        grafoG.setArreglos2(nodos,aristas);
    }//GEN-LAST:event_limpiarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        grafoG.eliminar();
    }//GEN-LAST:event_eliminarActionPerformed

    private void ejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarActionPerformed
        formarGrafo();
    }//GEN-LAST:event_ejecutarActionPerformed
    public void enviarEstados(){
        grafoG.setActividadNodo(gnodo);
        grafoG.setActividadArista(garista);
        grafoG.setMove(gmove);
        grafoG.setSelect(gselect);
        grafoG.repaint();
    }
    public static void print(Object o) {
        System.out.println(o);
    }
    public void setValueState(int numNo,int numAr){
    numN.setText(String.valueOf(numNo));
    numA.setText(String.valueOf(numAr));
    }
    public void formarGrafo(){
        Iterator<Arista> it = aristas.values().iterator();
        while(it.hasNext()){
            Arista ar=it.next();
            //ar.getNodo1();
            print(nodos+"  "+ar.getNodo1()+"  "+ar.getNodo2());
            nodos.get(ar.getNodo1()).setNodo(nodos.get(ar.getNodo2()));
            nodos.get(ar.getNodo2()).setNodo(nodos.get(ar.getNodo1()));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedor1;
    private javax.swing.JButton ejecutar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton insertArc;
    private javax.swing.JButton insertNodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton move;
    private javax.swing.JLabel numA;
    private javax.swing.JLabel numN;
    private javax.swing.JButton select;
    // End of variables declaration//GEN-END:variables
}
